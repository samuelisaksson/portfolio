{"ast":null,"code":"var _jsxFileName = \"/Users/samuelisaksson/Documents/Programmering/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Avatar from '@mui/material/Avatar';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport IconButton from '@mui/material/IconButton';\nimport Menu from '@mui/material/Menu';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport Modal from '@mui/material/Modal';\nimport Switch from '@mui/material/Switch';\nimport TextField from '@mui/material/TextField';\nimport Toolbar from '@mui/material/Toolbar';\nimport Tooltip from '@mui/material/Tooltip';\nimport Typography from '@mui/material/Typography';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport DatePicker from '@mui/lab/DatePicker';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pages = ['Products', 'Pricing', 'Blog'];\nconst settings = ['Profile', 'Account', 'Dashboard', 'Logout'];\nconst modalStyle = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4\n};\n\nfunction App() {\n  _s();\n\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\n\n  const handleOpenNavMenu = event => {\n    setAnchorElNav(event.currentTarget);\n  };\n\n  const handleOpenUserMenu = event => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n\n  const [value, setValue] = React.useState(null);\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => setOpen(true);\n\n  const handleClose = () => setOpen(false);\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xl\",\n    sx: {\n      p: '0px !important'\n    },\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"xl\",\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          disableGutters: true,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            noWrap: true,\n            component: \"div\",\n            sx: {\n              mr: 2,\n              display: {\n                xs: 'none',\n                md: 'flex'\n              }\n            },\n            children: \"React Material UI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flexGrow: 1,\n              display: {\n                xs: 'flex',\n                md: 'none'\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"large\",\n              \"aria-label\": \"account of current user\",\n              \"aria-controls\": \"menu-appbar\",\n              \"aria-haspopup\": \"true\",\n              onClick: handleOpenNavMenu,\n              color: \"inherit\",\n              children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Menu, {\n              id: \"menu-appbar\",\n              anchorEl: anchorElNav,\n              anchorOrigin: {\n                vertical: 'bottom',\n                horizontal: 'left'\n              },\n              keepMounted: true,\n              transformOrigin: {\n                vertical: 'top',\n                horizontal: 'left'\n              },\n              open: Boolean(anchorElNav),\n              onClose: handleCloseNavMenu,\n              sx: {\n                display: {\n                  xs: 'block',\n                  md: 'none'\n                }\n              },\n              children: pages.map(page => /*#__PURE__*/_jsxDEV(MenuItem, {\n                onClick: handleCloseNavMenu,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  textAlign: \"center\",\n                  children: page\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 21\n                }, this)\n              }, page, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            noWrap: true,\n            component: \"div\",\n            sx: {\n              flexGrow: 1,\n              display: {\n                xs: 'flex',\n                md: 'none'\n              }\n            },\n            children: \"React Material UI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flexGrow: 1,\n              display: {\n                xs: 'none',\n                md: 'flex'\n              }\n            },\n            children: pages.map(page => /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleCloseNavMenu,\n              sx: {\n                my: 2,\n                color: 'white',\n                display: 'block'\n              },\n              children: page\n            }, page, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flexGrow: 0\n            },\n            children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"Open settings\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: handleOpenUserMenu,\n                sx: {\n                  p: 0\n                },\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  alt: \"Remy Sharp\",\n                  src: \"/static/images/avatar/2.jpg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Menu, {\n              sx: {\n                mt: '45px'\n              },\n              id: \"menu-appbar\",\n              anchorEl: anchorElUser,\n              anchorOrigin: {\n                vertical: 'top',\n                horizontal: 'right'\n              },\n              keepMounted: true,\n              transformOrigin: {\n                vertical: 'top',\n                horizontal: 'right'\n              },\n              open: Boolean(anchorElUser),\n              onClose: handleCloseUserMenu,\n              children: settings.map(setting => /*#__PURE__*/_jsxDEV(MenuItem, {\n                onClick: handleCloseUserMenu,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  textAlign: \"center\",\n                  children: setting\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 21\n                }, this)\n              }, setting, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      sx: {\n        mt: 3,\n        '& .MuiTextField-root': {\n          my: 1,\n          width: '100%'\n        }\n      },\n      noValidate: true,\n      autoComplete: \"off\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"xl\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"exampleInput\",\n            label: \"Example input\",\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"exampleTextarea\",\n            label: \"Example textarea\",\n            multiline: true,\n            rows: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Switch, {\n              defaultChecked: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 40\n            }, this),\n            label: \"Example switch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n            dateAdapter: AdapterDateFns,\n            children: /*#__PURE__*/_jsxDEV(DatePicker, {\n              label: \"Example date\",\n              value: value,\n              onChange: newValue => {\n                setValue(newValue);\n              },\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handleOpen,\n            children: \"Open modal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            open: open,\n            onClose: handleClose,\n            \"aria-labelledby\": \"modal-modal-title\",\n            \"aria-describedby\": \"modal-modal-description\",\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: modalStyle,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                id: \"modal-modal-title\",\n                variant: \"h6\",\n                component: \"h2\",\n                children: \"Text in a modal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                id: \"modal-modal-description\",\n                sx: {\n                  mt: 2\n                },\n                children: \"Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: handleClose,\n                sx: {\n                  mt: 2\n                },\n                children: \"Close modal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"HP9tOWjSxblm3kF5qg+UwUvyN/4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/samuelisaksson/Documents/Programmering/src/App.tsx"],"names":["React","AppBar","Avatar","Box","Button","Container","FormControlLabel","IconButton","Menu","MenuIcon","MenuItem","Modal","Switch","TextField","Toolbar","Tooltip","Typography","AdapterDateFns","DatePicker","LocalizationProvider","pages","settings","modalStyle","position","top","left","transform","width","bgcolor","border","boxShadow","p","App","anchorElNav","setAnchorElNav","useState","anchorElUser","setAnchorElUser","handleOpenNavMenu","event","currentTarget","handleOpenUserMenu","handleCloseNavMenu","handleCloseUserMenu","value","setValue","open","setOpen","handleOpen","handleClose","mr","display","xs","md","flexGrow","vertical","horizontal","Boolean","map","page","my","color","mt","setting","newValue","params"],"mappings":"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","sourcesContent":["import React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Avatar from '@mui/material/Avatar';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport IconButton from '@mui/material/IconButton';\nimport Menu from '@mui/material/Menu';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport Modal from '@mui/material/Modal';\nimport Switch from '@mui/material/Switch';\nimport TextField from '@mui/material/TextField';\nimport Toolbar from '@mui/material/Toolbar';\nimport Tooltip from '@mui/material/Tooltip';\nimport Typography from '@mui/material/Typography';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport DatePicker from '@mui/lab/DatePicker';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport './App.css';\n\nconst pages = ['Products', 'Pricing', 'Blog'];\nconst settings = ['Profile', 'Account', 'Dashboard', 'Logout'];\n\nconst modalStyle = {\n  position: 'absolute' as 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n};\n\nfunction App() {\n  const [anchorElNav, setAnchorElNav] = React.useState<null | HTMLElement>(null);\n  const [anchorElUser, setAnchorElUser] = React.useState<null | HTMLElement>(null);\n\n  const handleOpenNavMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorElNav(event.currentTarget);\n  };\n  const handleOpenUserMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n\n  const [value, setValue] = React.useState<Date | null>(null);\n\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <Container maxWidth=\"xl\" sx={{ p: '0px !important' }}>\n      <AppBar position=\"static\">\n        <Container maxWidth=\"xl\">\n          <Toolbar disableGutters>\n            <Typography\n              variant=\"h6\"\n              noWrap\n              component=\"div\"\n              sx={{ mr: 2, display: { xs: 'none', md: 'flex' } }}\n            >\n              React Material UI\n            </Typography>\n\n            <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n              <IconButton\n                size=\"large\"\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleOpenNavMenu}\n                color=\"inherit\"\n              >\n                <MenuIcon />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorElNav}\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'left',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'left',\n                }}\n                open={Boolean(anchorElNav)}\n                onClose={handleCloseNavMenu}\n                sx={{\n                  display: { xs: 'block', md: 'none' },\n                }}\n              >\n                {pages.map((page) => (\n                  <MenuItem key={page} onClick={handleCloseNavMenu}>\n                    <Typography textAlign=\"center\">{page}</Typography>\n                  </MenuItem>\n                ))}\n              </Menu>\n            </Box>\n            <Typography\n              variant=\"h6\"\n              noWrap\n              component=\"div\"\n              sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}\n            >\n              React Material UI\n            </Typography>\n            <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n              {pages.map((page) => (\n                <Button\n                  key={page}\n                  onClick={handleCloseNavMenu}\n                  sx={{ my: 2, color: 'white', display: 'block' }}\n                >\n                  {page}\n                </Button>\n              ))}\n            </Box>\n\n            <Box sx={{ flexGrow: 0 }}>\n              <Tooltip title=\"Open settings\">\n                <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\n                  <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/2.jpg\" />\n                </IconButton>\n              </Tooltip>\n              <Menu\n                sx={{ mt: '45px' }}\n                id=\"menu-appbar\"\n                anchorEl={anchorElUser}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={Boolean(anchorElUser)}\n                onClose={handleCloseUserMenu}\n              >\n                {settings.map((setting) => (\n                  <MenuItem key={setting} onClick={handleCloseUserMenu}>\n                    <Typography textAlign=\"center\">{setting}</Typography>\n                  </MenuItem>\n                ))}\n              </Menu>\n            </Box>\n          </Toolbar>\n        </Container>\n      </AppBar>\n      <Box\n        component=\"form\"\n        sx={{\n          mt: 3,\n          '& .MuiTextField-root': { my: 1, width: '100%' },\n        }}\n        noValidate\n        autoComplete=\"off\"\n      >\n        <Container maxWidth=\"xl\">\n          <div>\n            <TextField id=\"exampleInput\" label=\"Example input\" variant=\"outlined\" />\n          </div>\n          <div>\n            <TextField id=\"exampleTextarea\" label=\"Example textarea\" multiline rows={4} />\n          </div>\n          <div>\n            <FormControlLabel control={<Switch defaultChecked />} label=\"Example switch\" />\n          </div>\n          <div>\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                label=\"Example date\"\n                value={value}\n                onChange={(newValue) => {\n                  setValue(newValue);\n                }}\n                renderInput={(params) => <TextField {...params} />}\n              />\n            </LocalizationProvider>\n          </div>\n          <div>\n            <Button variant=\"contained\" onClick={handleOpen}>Open modal</Button>\n            <Modal\n              open={open}\n              onClose={handleClose}\n              aria-labelledby=\"modal-modal-title\"\n              aria-describedby=\"modal-modal-description\"\n            >\n              <Box sx={modalStyle}>\n                <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n                  Text in a modal\n                </Typography>\n                <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                  Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\n                </Typography>\n                <Button variant=\"contained\" onClick={handleClose} sx={{ mt: 2 }}>Close modal</Button>\n              </Box>\n            </Modal>\n          </div>\n        </Container>\n      </Box>\n    </Container>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}